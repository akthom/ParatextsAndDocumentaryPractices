<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id><journal-id journal-id-type="publisher-id">bioinformatics</journal-id><journal-id journal-id-type="hwp">bioinfo</journal-id><journal-title-group><journal-title>Bioinformatics</journal-title></journal-title-group><issn pub-type="ppub">1367-4803</issn><issn pub-type="epub">1460-2059</issn><publisher><publisher-name>Oxford University Press</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">18586736</article-id><article-id pub-id-type="pmc">2718661</article-id><article-id pub-id-type="doi">10.1093/bioinformatics/btn186</article-id><article-id pub-id-type="publisher-id">btn186</article-id><article-categories><subj-group subj-group-type="heading"><subject>Ismb 2008 Conference Proceedings 19&#x02013;23 July 2008, Toronto</subject><subj-group><subject>Original Papers</subject><subj-group><subject>Other Bioinformatics Applications and Methods</subject></subj-group></subj-group></subj-group></article-categories><title-group><article-title>A maximum common substructure-based algorithm for searching and predicting drug-like compounds</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Cao</surname><given-names>Yiqun</given-names></name><xref ref-type="aff" rid="AFF1"><sup>1</sup></xref><xref ref-type="corresp" rid="COR1">*</xref></contrib><contrib contrib-type="author"><name><surname>Jiang</surname><given-names>Tao</given-names></name><xref ref-type="aff" rid="AFF1"><sup>1</sup></xref></contrib><contrib contrib-type="author"><name><surname>Girke</surname><given-names>Thomas</given-names></name><xref ref-type="aff" rid="AFF1"><sup>2</sup></xref></contrib></contrib-group><aff id="AFF1"><sup>1</sup>Department of Computer Science and Engineering and <sup>2</sup>Department of Botany and Plant Sciences, University of California, Riverside, CA 92521, USA</aff><author-notes><corresp id="COR1">*To whom correspondence should be addressed.</corresp></author-notes><pub-date pub-type="ppub"><day>1</day><month>7</month><year>2008</year></pub-date><pub-date pub-type="pmc-release"><day>1</day><month>7</month><year>2008</year></pub-date><!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="ppub"/>. --><volume>24</volume><issue>13</issue><fpage>i366</fpage><lpage>i374</lpage><permissions><copyright-statement>&#x000a9; 2008 The Author(s)</copyright-statement><copyright-year>2008</copyright-year><license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/"><license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">http://creativecommons.org/licenses/by-nc/2.0/uk/</ext-link>) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><abstract><p><bold>Motivation:</bold> The prediction of biologically active compounds is of great importance for high-throughput screening (HTS) approaches in drug discovery and chemical genomics. Many computational methods in this area focus on measuring the structural similarities between chemical structures. However, traditional similarity measures are often too rigid or consider only global similarities between structures. The maximum common substructure (MCS) approach provides a more promising and flexible alternative for predicting bioactive compounds.</p><p><bold>Results:</bold> In this article, a new backtracking algorithm for MCS is proposed and compared to global similarity measurements. Our algorithm provides high flexibility in the matching process, and it is very efficient in identifying local structural similarities. To predict and cluster biologically active compounds more efficiently, the concept of <italic>basis compounds</italic> is proposed that enables researchers to easily combine the MCS-based and traditional similarity measures with modern machine learning techniques. Support vector machines (SVMs) are used to test how the MCS-based similarity measure and the <italic>basis compound</italic> vectorization method perform on two empirically tested datasets. The test results show that MCS complements the well-known atom pair descriptor-based similarity measure. By combining these two measures, our SVM-based model predicts the biological activities of chemical compounds with higher specificity and sensitivity.</p><p><bold>Contact:</bold><email>ycao@cs.ucr.edu</email></p><p><bold>Supplementary information:</bold> <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btn186/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p></abstract></article-meta></front><body><sec sec-type="intro" id="SEC1"><title>1 INTRODUCTION</title><p>The discovery of novel biologically active compounds using high-throughput screening (HTS) technologies is a very costly and time consuming component in the discovery process of novel drugs and chemical genomics. With the recent advancements in compound synthesis, more and more compounds become available, but the time and effort required to screen these libraries has only been slightly reduced in the past years (Dobson, <xref ref-type="bibr" rid="B21">2004</xref>). Because of this situation, there is a high demand for predictive computational methods that can enrich the number of potential drug candidates in new screening libraries. For instance, similarity search and clustering techniques are used to identify new drug-like compounds (Sheridan and Kearsley, <xref ref-type="bibr" rid="B40">2002</xref>). In addition, computational filtering methods and models are used to predict druggability of small molecules (Cheng <italic>et al.</italic>, <xref ref-type="bibr" rid="B12">2007</xref>). As a result, HTS has developed into a combinatorial approach consisting of <italic>in silico</italic> and <italic>in vitro</italic> screening methods to jointly improve the turnaround time and success rate of the drug discovery process (Abt <italic>et al.</italic>, <xref ref-type="bibr" rid="B1">2001</xref>; Engels and Venkatarangan, <xref ref-type="bibr" rid="B23">2001</xref>).</p><p>One of the basic principles behind ligand-based activity prediction models is the widely accepted <italic>similar property principle</italic>. This principle is based on the observation that chemicals of similar structures frequently share similar physicochemical properties and biological activities (Johnson and Maggiora, <xref ref-type="bibr" rid="B30">1990</xref>). Because of the importance of this principle in drug discovery research, many similarity measures have been proposed to accurately quantify similarity between chemical structures and predict their bioactivity potential.</p><p><italic>Substructure</italic> and <italic>superstructure</italic> relationships are among the most commonly used similarity measures. Given two chemical structures A and B, if structure A is fully contained in structure B, then A is a substructure of B, while B is a superstructure of A. According to the above similar property principle, A and B may share properties that are related to their common substructure. Therefore, a substructure that is putatively associated with certain properties of interest can be used as query to identify in databases all compounds that share this substructure (or superstructure) and possibly its activities. This type of similarity measures have several drawbacks. First, the utilized matching strategy is very rigid and has a high false-negative rate. Second, substructure searching is a knowledge-based approach, in which every utilized query substructure needs to be well defined. If this is not the case or a substructure model is not entirely correct, the search results will be of poor quality and of very limited predictive value. Most importantly, this search type does not generate any quantitative similarity measure, which makes it difficult to rank the search results in a meaningful manner.</p><p><italic>Structural descriptor-based methods</italic> are also commonly used approaches for structural similarity searching and bioactivity predictions. Structural descriptors represent chemical structures in a way so that their similarity can be easily quantified. Usually, this is achieved by enumerating different structural subcomponents in chemical structures by a variety of methods. This type of search represents a much less stringent (in fact, far more flexible) approach than substructure search. Typically, the search uses a full structure or substructure as query, and identifies structures in the database that are globally &#x02018;similar&#x02019; to the query structure. Structure similarity search does not require an exact match, and they can provide scores as a similarity measure for ranking the results. Since there is no clear definition of structural similarity, many divergent similarity measurement methods have been proposed and are now employed in various software applications in form of 2D structure fragment-based search methods, such as fingerprint, atom pair (AP), atom sequence (AS) and many others (Carhart <italic>et al.</italic>, <xref ref-type="bibr" rid="B9">1985</xref>; Chen and Reynolds, <xref ref-type="bibr" rid="B11">2002</xref>; Dean, <xref ref-type="bibr" rid="B18">1995</xref>; Girke <italic>et al.</italic>, <xref ref-type="bibr" rid="B25">2005</xref>; Johnson and Maggiora, <xref ref-type="bibr" rid="B30">1990</xref>; Sheridan and Kearsley, <xref ref-type="bibr" rid="B40">2002</xref>; Willett <italic>et al.</italic>, <xref ref-type="bibr" rid="B44">1998</xref>). Essentially these methods represent a chemical structure as a vector in a high-dimensional space. The generated <italic>similarity coefficients</italic> of these approaches provide a mathematical model for estimating structural similarities. Many model building methods have been applied for predicting biological activities based on structural similarities, such as neural networks (Burden, <xref ref-type="bibr" rid="B8">1996</xref>), fuzzy adaptive least squares (Moriguchi <italic>et al.</italic>, <xref ref-type="bibr" rid="B36">1992</xref>), inductive logic programming (King and Srinivasan, <xref ref-type="bibr" rid="B31">1997</xref>) and frequency-based fragment weighing schemes (Carhart <italic>et al.</italic>, <xref ref-type="bibr" rid="B9">1985</xref>). Although computationally simple and effective in practice, practically all of the structural descriptor-based methods share severe limitations. Most importantly, they are unable to identify local similarities between structures or those with large size differences, which is depicted in <xref ref-type="fig" rid="F1">Figure 1</xref>. In addition, their false-negative rates increase vastly when it comes to the identification of weaker similarities.
<fig id="F1" position="float"><label>Fig. 1.</label><caption><p>Local similarity between compounds. The two structures share a common substructure (dashed boxes). The size difference will result in insignificant scores in 2D fragment-based similarity measures.</p></caption><graphic xlink:href="btn186f1"/></fig></p><p>Maximum common substructure (MCS), as a metric for chemical similarity searching and activity predictions, is a promising alternative to the above approaches. The MCS of two compounds is the largest substructure that appears in both structures. Using MCS to measure similarity of chemical structures has several advantages. First, it is intuitive, as the largest common substructure of structurally related drugs is likely to be an important component of their activities. Second, the match can be visualized by highlighting the maximum common subgraph between two chemical structures. When comparing the MCS-based similarity measures to the sub/superstructure-based similarity measures, the latter can be seen as a special case of the former, and therefore MCS has all the advantages of the sub/superstructure-based methods, but lacks the drawback of requiring an exact match. Compared to structural descriptor methods, the MCS-based similarity measures can generate a similarity score for a pair of structures, which can be used to rank the search results and to supply them to machine learning approaches and other mathematical models. Unlike structural descriptor methods, the MCS-based approach will perform well in identifying local similarities where structural descriptor methods typically fail.</p><p>The MCS problem has been well studied as a general graph matching problem, and has found applications in many areas (Bunke, <xref ref-type="bibr" rid="B6">2000</xref>). Garey and Johnson (<xref ref-type="bibr" rid="B24">1979</xref>) showed that the MCS problem is non-deterministic polynomial time (NP)-complete. However, many algorithms have been proposed to solve the problem either optimally (Cordella <italic>et al.</italic>, <xref ref-type="bibr" rid="B16">1998</xref>; McGregor, <xref ref-type="bibr" rid="B35">1982</xref>), sub-optimally (Luo and Hancock, <xref ref-type="bibr" rid="B34">2001</xref>; Wang <italic>et al.</italic>, <xref ref-type="bibr" rid="B42">1997</xref>; Wilson and Hancock, <xref ref-type="bibr" rid="B45">1997</xref>) or with error tolerance (Berretti <italic>et al.</italic>, <xref ref-type="bibr" rid="B4">2001</xref>; Dumay <italic>et al.</italic>, <xref ref-type="bibr" rid="B22">1992</xref>; Tsai and Fu, <xref ref-type="bibr" rid="B41">1979</xref>). A comprehensive review of different MCS algorithms is available in (Conte <italic>et al.</italic>, <xref ref-type="bibr" rid="B15">2004</xref>). However, most of these algorithms are focused on general graphs from the pattern recognition area. These methods do not meet the specific needs for efficient graph representations in the chemical compound area, which are sparse, small in size and with bounded degrees. Also, most of the algorithms convert input graphs to association graphs and convert the MCS problem to a clique detection problem. These conversions make it much harder to perform flexible matching effectively. For example, allowing a bromine atom to be matched to a chlorine atom when they are attached to an aromatic ring, but not elsewhere, is much harder to do with association graphs.</p><p>Surprisingly, after Cone <italic>et al.</italic> (<xref ref-type="bibr" rid="B14">1977</xref>) proposed to use MCS as a similarity measure, the approach has received much less attention than other similarity measure strategies. This is mainly due to the intractable computational complexity of the MCS problem. Hagadone (<xref ref-type="bibr" rid="B27">1992</xref>) has built an MCS-based chemical structure search program for 2D structure drug discovery databases. More recently, Raymond <italic>et al.</italic> (<xref ref-type="bibr" rid="B38">2002a</xref>) applied several heuristic strategies that are based on specific properties of chemical structures to improve the efficiency of the MCS-based similarity search algorithm (Raymond <italic>et al.</italic> <xref ref-type="bibr" rid="B39">2002b</xref>). The most recent work on the MCS problem is from Yan <italic>et al.</italic> (<xref ref-type="bibr" rid="B46">2005</xref>). The result is restricted to the design of an efficient feature database and does not include a structure comparison step.</p><p>In this project, we propose and implement a new backtracking algorithm to compute MCS. New heuristics and strategies are introduced to reduce the computation time. The search space is properly ordered to further enhance the efficiency and to facilitate the application of the progressive optimization strategy to process large compound databases.</p><p>We test the MCS-based similarity measure by applying it to similarity searching in compound databases. The MCS-based method is compared with the AP-based method (Carhart <italic>et al.</italic>, <xref ref-type="bibr" rid="B9">1985</xref>; Chen and Reynolds, <xref ref-type="bibr" rid="B11">2002</xref>) using a number of simulated searches with bioactive compounds as queries. Our results show that the MCS-based method outperforms the AP-based method in typical searches in chemical databases.</p><p>We also introduce a novel concept of <italic>basis compounds</italic> to combine the MCS-based similarity measure with modern machine learning methods. To illustrate this, models for predicting bioactive compounds from chemical databases are built by coupling the above similarity measures with support vector machines (or SVMs) (Christianini and Shawe-Taylor, <xref ref-type="bibr" rid="B13">2000</xref>). Our experimental results show that the prediction model based on the MCS information outperforms and complements models based on traditional similarity measures. The basis compounds method also allows us to easily take advantage of multiple complementary similarity measures by integrating them into one prediction model. We have incorporated the MCS-based similarity measure and traditional AP similarity measure into a hybrid model. This model provides the most effective predictions. The prediction models proposed in this article can be applied to <italic>in silico</italic> pre-screening, which filters a large compound library for experimental screening, and to sequential screening that utilizes a process of alternating <italic>in silico</italic> and experimental screening steps (Blower <italic>et al.</italic>, <xref ref-type="bibr" rid="B5">2006</xref>).</p></sec><sec id="SEC2"><title>2 COMPUTING MAXIMUM COMMON SUBGRAPHS</title><sec sec-type="intro" id="SEC2.1"><title>2.1 Overview</title><p>A pair of graphs are said to be <italic>isomorphic</italic> if there is a one-to-one correspondence between their vertices. Moreover, this correspondence has the property that an edge between two vertices exists in one graph if and only if an edge exists between the corresponding two vertices in the other graph. A graph <italic>G</italic><sub><italic>s</italic></sub> is said to be an <italic>induced subgraph</italic> of a graph <italic>G</italic> if all vertices of graph <italic>G</italic><sub><italic>s</italic></sub> belong to the set of vertices of graph <italic>G</italic>, and there is an edge between two vertices in graph <italic>G</italic><sub><italic>s</italic></sub> if and only if there is an edge between those two vertices in graph <italic>G</italic>. For example, in <xref ref-type="fig" rid="F2">Figure 2</xref>, graph c is an induced subgraph of graph a. A <italic>common induced subgraph</italic> between the graphs <italic>G</italic><sub>1</sub> and <italic>G</italic><sub>2</sub> are two graphs <italic>G</italic><sub><italic>s</italic>1</sub> and <italic>G</italic><sub><italic>s</italic>2</sub>, such that <italic>G</italic><sub><italic>s</italic>1</sub> is an induced subgraph of <italic>G</italic><sub>1</sub>, <italic>G</italic><sub><italic>s</italic>2</sub> is an induced subgraph of <italic>G</italic><sub>2</sub> and <italic>G</italic><sub><italic>s</italic>1</sub> and <italic>G</italic><sub><italic>s</italic>2</sub> are isomorphic. In <xref ref-type="fig" rid="F2">Figure 2</xref>, graph c is an induced subgraph of both graphs a and b, and is a common induced subgraph of graphs a and b. The largest common induced subgraph for a pair of graphs is referred to as the MCS between them.
<fig id="F2" position="float"><label>Fig. 2.</label><caption><p>Induced subgraph, common induced subgraph and MCS. Graph (<bold>c</bold>) is an induced subgraph of graphs (<bold>a</bold>) and (<bold>b</bold>). Therefore, it is common induced subgraph of the two graphs. It is also the MCS between them.</p></caption><graphic xlink:href="btn186f2"/></fig></p></sec><sec id="SEC2.2"><title>2.2 A new MCS algorithm</title><p>Many MCS algorithms convert the MCS problem into the maximum clique problem by introducing <italic>association graphs</italic>, also known as <italic>compatibility graphs</italic> (Barrow and Burstall, <xref ref-type="bibr" rid="B3">1976</xref>; Cone <italic>et al.</italic>, <xref ref-type="bibr" rid="B14">1977</xref>; Levi, <xref ref-type="bibr" rid="B33">1973</xref>). Using this approach, we can take advantage of the availability of different types of clique detection algorithms. However, due to the nature of chemical structures, the conversion will result in an association graph with a large and dense structure (Raymond <italic>et al.</italic>, <xref ref-type="bibr" rid="B38">2002a</xref>). In addition, such a conversion will complicate flexible matching approaches for finding common substructures. For instance, although it is possible to limit the solution to connected subgraphs (Koch, <xref ref-type="bibr" rid="B32">2001</xref>), using association graphs it is not easy to further relax the constraints on their connectedness, such as limiting the solution to contain at most three connected components. Another example is matching different atoms under certain conditions, such as matching bromine and chlorine only when they are both attached to an aromatic ring. This level of flexibility in subgraph matching is also difficult to achieve with association graphs.</p><p>To avoid the difficulty in the association graph-based approaches, we propose a new backtracking algorithm for the MCS problem, which operates directly on the chemical structure graph. This algorithm is based on the VF algorithm, which is designed for the graph and subgraph isomorphism problems (Cordella <italic>et al.</italic>, <xref ref-type="bibr" rid="B17">2001</xref>). The pseudocode of our algorithm is included in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btn186/DC1">Supplementary Material</ext-link> Section.</p><p>To illustrate the basic idea of our backtracking algorithm, one can consider the problem of finding the MCS of the graphs a and b in <xref ref-type="fig" rid="F3">Figure 3</xref>. A common subgraph of two graphs can be represented by the vertex correspondences between the isomorphic subgraphs. For example, the subgraph of the graph 3a consisting of the vertices <italic>A</italic> and <italic>B</italic> and the edge (<italic>A</italic>,<italic>B</italic>) and the subgraph of the graph 3b consisting of the vertices <italic>a</italic> and <italic>b</italic> and the edge (<italic>a</italic>,<italic>b</italic>) are isomorphic. This common subgraph can be represented by matching <italic>A</italic> to <italic>a</italic> and <italic>B</italic> to <italic>b</italic>, and it is denoted by a set of vertex correspondences as {<italic>A</italic> : <italic>a</italic>,<italic>B</italic> : <italic>b</italic>}. The backtracking algorithm searches <italic>all</italic> possible combinations of vertex correspondences. It organizes these combinations in a <italic>search tree</italic>. Each node of the search tree is a set of correspondences. By moving down the tree, this set is expanded. Therefore, the set of correspondences at the parent node is always a subset of the set at any child node (<xref ref-type="fig" rid="F4">Fig. 4</xref>). For example, the root of the tree is an empty set {}. The leftmost child of the root, {<italic>a</italic> : <italic>A</italic>}, has one correspondence, which matches vertex <italic>a</italic> to vertex <italic>A</italic>. The leaf nodes correspond to <italic>maximal</italic> common subgraphs, which cannot be further expanded. The final solution to the MCS problem corresponds to one of these leaf nodes. The backtracking algorithm searches this tree in a depth-first fashion, and will return the leaf node that contains the largest set of vertex correspondences as the solution to the MCS problem. In this example, the leftmost leaf node ({<italic>a</italic> : <italic>A</italic>,<italic>b</italic> : <italic>B</italic>}) may be returned as the MCS of the graphs 3a and 3b.
<fig id="F3" position="float"><label>Fig. 3.</label><caption><p>Two example graphs.</p></caption><graphic xlink:href="btn186f3"/></fig></p><p>To speed up the computation, we introduce several strategies to reduce the search space. First, we limit the connectedness of the resultant MCS. Second, we use a heuristic based on the induced subgraph constraints to quickly remove branches with infeasible matches. Third, <italic>branch and bound</italic> strategies are employed to discard entire branches in the search tree. Finally, we order the search space such that the branch containing the solution can be searched as early as possible. This can improve the effectiveness of the branch and bound strategy, and it also helps when progressive optimization steps are used.</p><sec id="SEC2.2.1"><title>2.2.1 Connectedness of the resultant subgraphs</title><p>The MCS of two graphs may contain a number of disconnected structural fragments. This type of MCS is often not desirable when applied to similarity measure of chemical structures. For example, the MCS of two chemical structures in <xref ref-type="fig" rid="F5">Figure 5</xref> consists of five disconnected <monospace>C&#x02013;O</monospace> fragments. When using the MCS as a similarity measure between chemical structures, it is often desired to only identify connected MCSs or MCSs consisting of only a limited number of disconnected fragments. Such a connectedness constraint can drastically reduce the search space in finding the MCS. To take advantage of this, our algorithm expands the current common subgraph by growing existing fragments if possible, and it keeps track of the connectedness of the current common subgraph. When it is required to start a new fragment in the common subgraph, the algorithm checks whether the number of disconnected fragments has reached its limit. If the limit has been reached, then the algorithm stops searching along the present branch and considers the common subgraph as the maximal one it can find along this branch of the search tree. In the pseudocode, this constraint is tested in the <italic>order</italic> subroutine. When the connectedness limit is reached and there is no way to further expand the current common subgraph without introducing a new disconnected fragment, the <italic>order</italic> subroutine will return a <italic>None</italic> value to stop searching the current branch. At this point the current common subgraph found will replace the global solution if it provides an improvement to the previous one.
<fig id="F4" position="float"><label>Fig. 4.</label><caption><p>Search tree of a backtracking algorithm in search of the MCS between of the graphs a and b in <xref ref-type="fig" rid="F3">Figure 3</xref>.</p></caption><graphic xlink:href="btn186f4"/></fig>
<fig id="F5" position="float"><label>Fig. 5.</label><caption><p>Two example structures. The MCS of the two structures will be five disjoint <monospace>C&#x02013;O</monospace> pairs.</p></caption><graphic xlink:href="btn186f5"/></fig></p></sec><sec id="SEC2.2.2"><title>2.2.2 Induced subgraph heuristic</title><p>A heuristic to quickly identify an infeasible set of correspondences can be derived from the definition of the induced subgraph. Consider the problem of finding the MCS between two graphs <italic>G</italic><sub>1</sub> and <italic>G</italic><sub>2</sub>. Let <italic>u</italic><sub>1</sub> and <italic>v</italic><sub>1</sub> be unmatched in the vertices in <italic>G</italic><sub>1</sub> and <italic>G</italic><sub>2</sub>, respectively. To check whether adding a correspondence, <italic>u</italic><sub>1</sub> : <italic>v</italic><sub>1</sub>, to the current set of correspondences will lead to a feasible set of correspondences, the heuristic retrieves a set <italic>S</italic><sub>1</sub> of matched neighbors of <italic>u</italic><sub>1</sub> in <italic>G</italic><sub>1</sub>, and a set <italic>S</italic><sub>2</sub> of matched neighbors of <italic>v</italic><sub>1</sub> in <italic>G</italic><sub>2</sub>. If the elements in these two sets do not have a one-to-one correspondence in the current set of correspondences, then the correspondence <italic>u</italic><sub>1</sub> : <italic>v</italic><sub>1</sub> cannot be added. This heuristic is implemented in the <italic>compatible</italic> routine in the pseudocode.</p><p>For example, for finding the MCS between the graph in <xref ref-type="fig" rid="F3">Figure 3</xref>a and the one in <xref ref-type="fig" rid="F3">Figure 3</xref>b , when the current set of correspondences is {<italic>b</italic> : <italic>A</italic>}, it is not feasible to add the correspondence <italic>c</italic> : <italic>B</italic>, because <italic>c</italic> is a neighbor of <italic>b</italic> in graph 3b while <italic>A</italic> and <italic>B</italic> are not neighbors in graph 3a.</p></sec><sec id="SEC2.2.3"><title>2.2.3 Branch and bound</title><p>Our algorithm employs the branch and bound strategy to discard branches of the search tree that cannot lead to an improvement of the candidate solution. An upper bound on the sizes of the common subgraphs at the leaf nodes of the present branch can be estimated. If this upper bound is worse than the candidate solution, then the branch can be discarded immediately and the algorithm backtracks to another branch.</p><p>The upper bound is estimated by using the above induced subgraph heuristic. At some point in traversing the search tree, let <italic>m</italic> be the size of the correspondence set, <italic>U</italic> be the set of the unmatched vertices in <italic>G</italic><sub>1</sub> and <italic>V</italic> be the set of the unmatched vertices in <italic>G</italic><sub>2</sub>. For each vertex <italic>v</italic> in <italic>U</italic>, if <italic>v</italic> has not been marked as infeasible by previous search, we apply the above heuristic to test whether it is allowed to match to some vertex in <italic>V</italic>. If <italic>n</italic> vertices of <italic>U</italic> find potential matches in <italic>V</italic>, then an upper bound on the sizes of the common subgraphs at the leaf nodes of the present branch is <italic>m</italic>+<italic>n</italic>.</p><p>A tighter bound can be achieved by building a bipartite graph from these unmatched vertices. A bipartite <italic>G</italic>=(<italic>U</italic>+<italic>V</italic>,<italic>E</italic>) is built. Initially <italic>E</italic> is an empty set. For <italic>u</italic><sub>1</sub> from <italic>U</italic> and <italic>v</italic><sub>1</sub> from <italic>V</italic>, if the correspondence <italic>u</italic><sub>1</sub> : <italic>v</italic><sub>1</sub> passes the induced subgraph heuristic test, then edge (<italic>u</italic><sub>1</sub>,<italic>v</italic><sub>1</sub>) is added to <italic>E</italic>. To obtain a tighter upper bound, the size of the maximum matching in this bipartite is computed, and then added to <italic>m</italic>.</p></sec><sec id="SEC2.2.4"><title>2.2.4 Ordering the search space</title><p>When using branch and bound, a proper order of the search space can help save a lot of computation time. We would like to search the branches that most likely contain the optimal or suboptimal solutions first, to potentially allow the candidate solution to be more quickly improved at an earlier stage. In this way, more branches can be discarded during the branch and bound steps.</p><p>A proper order of the search space also benefits <italic>progressive optimization</italic>. Progress optimization is a strategy that returns a suboptimal solution as early as possible to the user, and later progressively improves it over time. For example, progressive optimization can be applied to similarity searches that involve time-consuming computation of the similarity values between the query compound and compounds in the databases. To perform this search, a suboptimal solution is built using the <italic>approximate</italic> similarity values that can be computed faster. If the user is not satisfied with the result, the algorithm can improve it over time by progressively increasing the accuracy of similarity values. Our MCS algorithm can easily be adopted in progressive optimization-based similarity searches. This is achieved by suspending the MCS computation at any time, and using the candidate solution as an approximate result. To further refine the result, the MCS computation can be resumed on demand. Since ordering of search space in our MCS algorithm aims at more quickly improving the candidate solution at an earlier age, the result of progress optimization will be close to the optimal result at an earlier stage and it will stabilize sooner to an acceptable result.</p><p>At any point in traversing the search tree for computing the MCS between graphs <italic>G</italic><sub>1</sub> and <italic>G</italic><sub>2</sub>, our algorithm chooses the next node to visit based on the following strategy. It finds the vertex (or vertices) in graph <italic>G</italic><sub>1</sub> with the most neighbors in the current common subgraph. Among all the unvisited nodes in the search tree relevant to this vertex (or these vertices), it chooses the one that can improve the aforementioned upper bound the most. Experiments have shown that this ordering strategy can reduce the average computation time.</p><p>The above algorithm has been implemented in C. The corresponding software will be made available for public download in the near future.</p></sec></sec></sec><sec id="SEC3"><title>3 VECTOR REPRESENTATION OF COMPOUNDS FOR BIOACTIVITY PREDICTION</title><p>Traditional similarity measures, such as structural descriptors, represent a chemical structure as a vector in a high-dimensional space. Such vector representations may not be effective in statistical analyses and many machine learning techniques. This is because the dimensionality of the vectors is typically very high. For example, the widely used Daylight fingerprints use a 1024-bit string to represent a chemical structure (James <italic>et al.</italic>, <xref ref-type="bibr" rid="B29">1995</xref>). Fragment-based descriptors, such as AP descriptors, use a list of descriptors to represent chemical structures. These descriptors can easily be converted to a bit string, where 1 indicates the existence of a feature and 0 indicates the absence of a feature. Such a string may have an arbitrarily large dimensionality. In addition to this high dimensionality, the data is not numerical in nature, and is not suitable for most machine learning techniques.</p><p>These vector representations can be applied to bioactivity prediction models that are based on <italic>k nearest neighbors</italic> (KNN). Such approach requires only a suitable distance measure. Although the vector representations are not appropriate for statistical analyses or most machine learning procedures, they are suitable for measuring distances between chemical structures, and therefore they are useful for KNN-based modeling and prediction methods.</p><p>The MCS approach provides a useful distance measure between chemical structures, and therefore it can also be used for KNN. However, KNN-based modeling that employs MCS as a distance measure is computationally very expensive, because KNN requires all-against-all comparisons. To avoid all pairwise MCS calculation, and to vectorize chemical structures using the MCS approach, the concept of <italic>basis compounds</italic> is introduced. Basis compounds are a designed set of <italic>n</italic> diverse compounds, <italic>C</italic><sub>1</sub>,<italic>C</italic><sub>2</sub>,&#x02026;,<italic>C</italic><sub><italic>n</italic></sub>, such that each compound <italic>D</italic><sub><italic>i</italic></sub> from the compound database can be represented by an <italic>n</italic>-dimensional vector
<disp-formula><graphic xlink:href="btn186um1"/></disp-formula>
In other words, each compound is represented by a vector, where each element is the size of an MCS between the compound and a basis compound. The set of basis compounds can be carefully designed or randomly chosen from a large set of diverse compounds. It is important to note that vectorization of a chemical structure using basis compounds requires only a numerical similarity measure and is not specific to MCS. Therefore, the MCS-based similarity measure can be replaced by any other similarity measure scheme, such as the AP-based similarity measure. When using basis compounds, each chemical structure can be represented as a multi-dimensional vector. Since the dimensionality is controllable and each vector contains real numerical values, these vectors can be used in statistical modeling and machine learning techniques. In this article, we use SVMs as an example modeling technique to demonstrate the utility of the above vectorization method in predicting bioactive compounds.</p></sec><sec id="SEC4"><title>4 EVALUATION</title><sec id="SEC4.1"><title>4.1 Datasets</title><p>To test the performance of the proposed methods and models, experiments on similarity search and bioactivity prediction have been performed on two publicly available compound datasets, the NCI AIDS Antiviral Screen dataset and a subset of the NCI Human Tumor Cell Line Screen dataset. Both datasets have been published in the PubChem BioAssay database (Wheeler <italic>et al.</italic>, <xref ref-type="bibr" rid="B43">2007</xref>), and can be retrieved by BioAssay IDs 179 and 85, respectively. The NCI AIDS Antiviral Assay tested 40 000 compounds for evidence of anti-HIV activity. The NCI Human Tumor Cell Line Screen checked interesting compounds for anti-cancer activity by measuring growth inhibition of the MDA-MB-435 human breast tumor cell line. Both datasets record confirmatory activity information as well as concentration&#x02013;response relationships, but only the confirmatory activity information was used in our experiments.</p><p>The NCI AIDS Antiviral Screen dataset contains structure and activity information for 44 150 compounds, among which 1812 are classified as having antiviral activity. After removing compounds with missing structure information, the dataset contains 42 689 compounds, 1504 of which are classified as active. The subset of the NCI Human Tumor Cell Line Screen dataset covers 27 706 compounds, including 1822 compounds that show anti-cancer activity. After removal of compounds without structure information, 26 366 compounds remain in the dataset, 1647 of which are active compounds.</p></sec><sec id="SEC4.2"><title>4.2 Evaluation methods</title><sec id="SEC4.2.1"><title>4.2.1 Comparison of similarity measures by similarity searches</title><p>We first evaluated the performance of the two similarity measures by applying them in similarity searches. As similarity metrics we used for the MCS approach the size of the MCS between the query and each compound in the database, and for the AP method the Tanimoto coefficient. The AP method was chosen for benchmarking, because Chen and Reynolds (<xref ref-type="bibr" rid="B11">2002</xref>) showed that it outperforms other 2D structural descriptor-based similarity measures, such as the approach based on Molecular ACCess System (MACCS) keys proposed by Molecular Design Limited (MDL).</p><p>The performances of the two similarity search methods were compared by calculating their average positive predictive values (PPV; Altman and Bland, <xref ref-type="bibr" rid="B2">1994</xref>) on the search results concerning the two chosen compound datasets. A series of simulated similarity searches were performed using a random set of active compounds as queries. Each simulated similarity search ranked all compounds from the most similar one to the least similar one relative to the query. Considering the set of the <italic>k</italic> top-ranked compounds, the ratio of active compounds in this set was defined as the PPV. PPV expresses the capability of a similarity search method to enrich active compounds at the top of the search results. The higher the PPV, with the same <italic>k</italic>-value, the better a similarity search performs.</p></sec><sec id="SEC4.2.2"><title>4.2.2 Bioactivity prediction</title><p>The MCS- and AP-based similarity measures were also compared with regard to their performances in building SVM models for predicting bioactive candidates in compound databases. The proposed basis compound concept was used in converting chemical structures into vectors, which were then used in the training and testing of SVM-based prediction models. Between 20 to 140 randomly selected compounds from the whole dataset were used as basis compounds in the tests.</p><p>Three models were built and tested independently. The three models varied in their representations of chemical compounds. The first model uses the MCS similarity measure to build a vector for each compound (see <xref ref-type="sec" rid="SEC3">Section 3</xref>). The second one uses the AP similarity measure for vector building. The third one&#x02014;the hybrid model&#x02014;concatenates the vectors from both previous models. The three models were tested in a series of experimental settings which varied in the size of the training set, the number of basis compounds, and the coefficients used in defining similarity between compounds. The output of each model was a ranking of the compounds, in which the compounds were sorted by how likely they were bioactive based on the prediction. From these ranked results, an ROC curve was generated by plotting the true positive rates against the false-positive rates (Provost and Fawcett, <xref ref-type="bibr" rid="B37">2001</xref>). The performance of the prediction models for different experimental settings were then evaluated by measuring the corresponding areas under the ROC curves (AUC). Each experimental setting was tested in multiple runs, and the average AUC was used for comparisons, in which a larger AUC value indicates a better performance.</p></sec></sec><sec id="SEC4.3"><title>4.3 Experimental Results</title><sec id="SEC4.3.1"><title>4.3.1 MCS calculation speed</title><p>To evaluate the speed performance of our MCS algorithm, we performed the following test. We calculated the MCS between 1000 randomly selected pairs of compounds from the NCI anticancer data which had on average 24 non-hydrogen atoms and 27 bonds. The tests were performed in single thread mode on a workstation with a 2.0 GHz Intel Xeon processor and 2 GB of RAM. The average time required to finish an MCS calculation was 27.4 ms, with a SD of 35.6 ms. We also tested flexible matching on the same dataset by allowing one atom mismatch and disjoint MCSs. As expected, the flexible matching required more computation time. For example, when allowing one mismatch, the average time for one MCS calculation was about 2.2 s with a SD of 1.6 s. Unfortunately, we were not able to perform direct speed and accuracy comparisons with other methods because their implementations are currently not freely available in the public domain. In addition, the provided speed estimates are not comparable to those recorded in previous publications, because of major differences in their implementation, such as heuristic filtering and preprocessing steps before the MCS computation (e.g. Raymond <italic>et al.</italic>, <xref ref-type="bibr" rid="B38">2002a</xref>; Yan <italic>et al.</italic>, <xref ref-type="bibr" rid="B46">2005</xref>).</p></sec><sec id="SEC4.3.2"><title>4.3.2 Similarity search</title><p>Using the method described in the previous section, we have plotted the average PPV across the simulated similarity searches with various <italic>k</italic>-values representing the number of predicted positives. The plot (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btn186/DC1">Supplement Fig. A1</ext-link>) shows that PPVs of both search methods decrease when <italic>k</italic> increases. This means that if one moves down the ranked search result list, the cumulative ratio of active compounds decreases. Interestingly, the MCS method performs better for larger <italic>k</italic>-values (&#x0003e;29) and the AP method for smaller <italic>k</italic>-values. This result is expected, because the AP method performs well in detecting compounds with high global similarities which are more likely to share the same bioactivity than compounds with local similarities. On the other hand, the MCS method is able to rank global and more sophisticated local similarities equally well. Therefore, the MCS method identifies a larger set of bioactive candidates, but it does not necessarily rank compounds with global similarities at the top of the list. The following example illustrates this performance benefit of the MCS approach. For instance, if the user is interested in more than 29 of the top compounds, the MCS searches exhibit a better performance than the AP searches. If the top 100 compounds are of interest, which is a reasonable choice for similarity searches, the MCS method has a PPV of 0.30, and the AP method has a PPV of 0.27.</p></sec><sec id="SEC4.3.3"><title>4.3.3 Bioactivity prediction</title><p>To compare the predictive power of the MCS method against the AP method and the hybrid approach, each method was coupled with SVMs to build a model for predicting bioactive compounds. The input of the SVMs was the vector representation of compounds generated by each method. The output was either 0 for inactive compounds, or 1 for active compounds. SVM-based models were used to predict the bioactive compounds. The AUC values were recorded and used for evaluating the qualities of the predictions.</p><p>The SVM implementation provided in the R package <monospace>e1071</monospace> (Dimitriadou <italic>et al.</italic>, <xref ref-type="bibr" rid="B20">2005</xref>) was used for the tests. This package is based on the widely used C++-based LibSVM from Chang and Lin (<xref ref-type="bibr" rid="B10">2001</xref>). The default regression parameters defined in the package were used in the tests. In one of our tests we also used the <italic>ROC Curve for Binary SVM</italic> tool distributed with LibSVM, to achieve a fair comparison against data reported elsewhere. In this test, cross-validation was used to select the parameters (<italic>C</italic> and &#x003b3;) for the radial kernel function-based classifiers.</p></sec><sec id="SEC4.3.4"><title>4.3.4 Varying the size of the training set</title><p>One of the key factors impacting the prediction performance is the size of the training set. For real applications, it is desirable to achieve an acceptable performance with small training set sizes, because the prediction model is often used to select compound subsets from a large compound library to be used in the experimental screening process. The prediction models are only practically useful if the training set, obtained from an experimental screening process, is much smaller than the whole screening library. This is especially important for sequential screening, in which only a small initial set of compounds are experimentally tested and used to train the initial models. For both datasets, we performed experiments with training sets consisting of 1, 5, 10 and 25% of the whole dataset. 20 basis compounds were selected randomly from the whole dataset for each test. The average AUC values and SD are listed in <xref ref-type="table" rid="T1">Table 1</xref>.
<table-wrap id="T1" position="float"><label>Table 1.</label><caption><p>Average AUC values using different prediction models and different training set sizes</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="center" rowspan="1" colspan="1">Models</th><th colspan="4" align="center" rowspan="1">Training set size<hr/></th></tr><tr><th rowspan="1" colspan="1"/><th align="center" rowspan="1" colspan="1">1%</th><th align="center" rowspan="1" colspan="1">5%</th><th align="center" rowspan="1" colspan="1">10%</th><th align="center" rowspan="1" colspan="1">25%</th></tr></thead><tbody><tr><td colspan="5" align="left" rowspan="1">NCI antiviral dataset</td></tr><tr><td align="center" rowspan="1" colspan="1">MCS-based</td><td align="center" rowspan="1" colspan="1">57.9 (3.0)</td><td align="center" rowspan="1" colspan="1">64.0 (2.4)</td><td align="center" rowspan="1" colspan="1">67.0 (1.3)</td><td align="center" rowspan="1" colspan="1">70.0 (0.9)</td></tr><tr><td align="center" rowspan="1" colspan="1">AP-based</td><td align="center" rowspan="1" colspan="1">58.2 (3.1)</td><td align="center" rowspan="1" colspan="1">63.7 (1.8)</td><td align="center" rowspan="1" colspan="1">65.8 (1.8)</td><td align="center" rowspan="1" colspan="1">68.9 (1.5)</td></tr><tr><td align="center" rowspan="1" colspan="1">Hybrid</td><td align="center" rowspan="1" colspan="1">61.3 (3.4)</td><td align="center" rowspan="1" colspan="1">66.7 (1.9)</td><td align="center" rowspan="1" colspan="1">69.2 (1.3)</td><td align="center" rowspan="1" colspan="1">71.6 (1.2)</td></tr><tr><td colspan="5" align="left" rowspan="1">NCI anticancer dataset</td></tr><tr><td align="center" rowspan="1" colspan="1">MCS-based</td><td align="center" rowspan="1" colspan="1">60.3 (2.8)</td><td align="center" rowspan="1" colspan="1">65.4 (1.8)</td><td align="center" rowspan="1" colspan="1">68.0 (1.7)</td><td align="center" rowspan="1" colspan="1">70.9 (1.3)</td></tr><tr><td align="center" rowspan="1" colspan="1">AP-based</td><td align="center" rowspan="1" colspan="1">59.3 (3.3)</td><td align="center" rowspan="1" colspan="1">65.2 (1.8)</td><td align="center" rowspan="1" colspan="1">67.8 (1.7)</td><td align="center" rowspan="1" colspan="1">70.9 (1.8)</td></tr><tr><td align="center" rowspan="1" colspan="1">Hybrid</td><td align="center" rowspan="1" colspan="1">62.7 (3.2)</td><td align="center" rowspan="1" colspan="1">69.2 (1.8)</td><td align="center" rowspan="1" colspan="1">71.8 (1.4)</td><td align="center" rowspan="1" colspan="1">74.8 (1.2)</td></tr></tbody></table><table-wrap-foot><fn><p>The MCS-based model uses the absolute MCS sizes to represent a chemical structure as a vector. The AP-based model uses the AP-based similarity, and the hybrid model concatenates the vectors from both previous models. SDs are given in parentheses.</p></fn></table-wrap-foot></table-wrap></p><p><xref ref-type="table" rid="T1">Table 1</xref> shows that the performance of all three models improves with the size of the training dataset. The hybrid model achieves in all cases the best performance, while the MCS model performs almost consistently better than AP model. Moreover, the hybrid model outperforms the AP model with much smaller training sets. For instance, in both datasets, the hybrid model performs with a training set of 10% of the dataset better than the AP model with a training set that is 2.5 times as large.</p></sec><sec id="SEC4.3.5"><title>4.3.5 Overlap of active compounds identified by the models</title><p>The superior performance of the hybrid approach can be explained by the performance differences of the individual models in identifying similarities with different structural features (e.g. global or local similarities). For instance, in one of the tests with the NCI antiviral dataset, the active compound NSC 79521 was ranked by the AP model at position 1, while the MCS model ranked it at position 10 568. On the other hand, the active compound NSC 683278 was ranked at position 23 by the MCS model, and at position 2 673 by the AP-based model. The hybrid model ranked both of these actives at the very top of the list, at positions 33 and 4, respectively.</p><p>To evaluate these performance differences more carefully, we analyzed the overlaps between the active compounds identified by each pair of the three models. For a pair of models <italic>A</italic> and <italic>B</italic>, if the set of active compounds identified by <italic>A</italic> is <italic>S</italic>(<italic>A</italic>), and the set of active compounds identified by <italic>B</italic> is <italic>S</italic>(<italic>B</italic>), we define <italic>A's coverage of B</italic>, or <italic>C</italic><sub><italic>A</italic></sub>(<italic>B</italic>) as
<disp-formula id="M1"><label>(1)</label><graphic xlink:href="btn186m1"/></disp-formula>
The larger the coverage is, the better model <italic>A</italic> can cover the chemical space covered by <italic>B</italic>. If both <italic>C</italic><sub><italic>A</italic></sub>(<italic>B</italic>) and <italic>C</italic><sub><italic>B</italic></sub>(<italic>A</italic>) are small, the two models cover different subspaces of the chemical space and they complement each other. We studied the cross coverage between each pair of models by plotting the corresponding coverage values with different numbers of predicted active compounds, <italic>n</italic>. The plot (shown in <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btn186/DC1">Supplementary Fig. A2</ext-link>) shows that with a typical choice of <italic>n</italic>, one's coverage of the other is relatively small between the AP model and the MCS model. On the other hand, the hybrid model's coverages of the other two models are relatively high. For example, if 5% of the compounds are predicted to be active, 62% of the active compounds identified by the AP model are also identified by the MCS model, and 59% vice versa. On the other hand, the hybrid model identifies 85% of the active compounds of the AP model and 73% of the MCS model. These data show that the AP model and the MCS model cover different subspaces of the chemical space and they complement each other. The hybrid model effectively utilizes both the MCS and the AP similarity information, and covers a wider chemical space than any one of the other two models alone.</p></sec><sec id="SEC4.3.6"><title>4.3.6 Varying the MCS coefficients</title><p>In addition to the absolute size of the MCS between structures, a normalized MCS size has been considered in previous studies to measure similarity between a pair of structures (Bunke and Shearer, <xref ref-type="bibr" rid="B7">1998</xref>). We performed tests using different MCS-based similarity measures, or <italic>MCS coefficients</italic>. The following coefficients are included in these comparisons:
<disp-formula id="M2"><label>(2)</label><graphic xlink:href="btn186m2"/></disp-formula>
<disp-formula id="M3"><label>(3)</label><graphic xlink:href="btn186m3"/></disp-formula>
<disp-formula id="M4"><label>(4)</label><graphic xlink:href="btn186m4"/></disp-formula>
Here, <italic>G</italic><sub>1</sub> is the chemical structure to be vectorized, and <italic>G</italic><sub>2</sub> is one of the basis compounds. Each coefficient is also used to derive a hybrid model, which is included in the comparisons. All the models have been tested using training sets of different sizes and multiple sets of 20 randomly selected basis compounds on both compound sets. Part of the results is listed in <xref ref-type="table" rid="T2">Table 2</xref>.
<table-wrap id="T2" position="float"><label>Table 2.</label><caption><p>Average AUC values using the prediction models based on different MCS coefficients</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Models</th><th colspan="2" align="center" rowspan="1">Databases</th></tr><tr><th rowspan="1" colspan="1"/><th align="center" rowspan="1" colspan="1">NCI antiviral</th><th align="center" rowspan="1" colspan="1">NCI anticancer</th></tr></thead><tbody><tr><td align="center" rowspan="1" colspan="1">MCS</td><td align="center" rowspan="1" colspan="1">69.8 (0.9)</td><td align="center" rowspan="1" colspan="1">69.9 (1.3)</td></tr><tr><td align="center" rowspan="1" colspan="1">MCS c1</td><td align="center" rowspan="1" colspan="1">70.0 (1.9)</td><td align="center" rowspan="1" colspan="1">71.1 (1.3)</td></tr><tr><td align="center" rowspan="1" colspan="1">MCS c2</td><td align="center" rowspan="1" colspan="1">71.0 (0.9)</td><td align="center" rowspan="1" colspan="1">71.0 (1.2)</td></tr><tr><td align="center" rowspan="1" colspan="1">MCS c3</td><td align="center" rowspan="1" colspan="1">70.5 (1.9)</td><td align="center" rowspan="1" colspan="1">71.4 (0.9)</td></tr><tr><td align="center" rowspan="1" colspan="1">Hybrid</td><td align="center" rowspan="1" colspan="1">71.5 (1.2)</td><td align="center" rowspan="1" colspan="1">73.8 (1.2)</td></tr><tr><td align="center" rowspan="1" colspan="1">Hybrid c1</td><td align="center" rowspan="1" colspan="1">71.8 (1.7)</td><td align="center" rowspan="1" colspan="1">73.8 (1.2)</td></tr><tr><td align="center" rowspan="1" colspan="1">Hybrid c2</td><td align="center" rowspan="1" colspan="1">72.3 (0.9)</td><td align="center" rowspan="1" colspan="1">74.4 (1.1)</td></tr><tr><td align="center" rowspan="1" colspan="1">Hybrid c3</td><td align="center" rowspan="1" colspan="1">72.3 (1.2)</td><td align="center" rowspan="1" colspan="1">74.2 (1.3)</td></tr></tbody></table><table-wrap-foot><fn><p>SDs are given in parentheses. The NCI antiviral dataset wastested with a training set of 10 000 compounds and the NCI anticancer dataset was tested with a training set of 5000 compounds. The MCS model uses the absolute MCS sizes. The models MCS c1, MCS c2 and MCS c3 use the MCS coefficients listed in Equations (<xref ref-type="disp-formula" rid="M2">2</xref>), (<xref ref-type="disp-formula" rid="M3">3</xref>) and (<xref ref-type="disp-formula" rid="M4">4</xref>), respectively. The hybrid model uses the absolute MCS sizes and the AP information. The models hybrid c1, hybrid c2 and hybrid c3 use MCS coefficients listed in Equation (<xref ref-type="disp-formula" rid="M2">2</xref>), (<xref ref-type="disp-formula" rid="M3">3</xref>) and (<xref ref-type="disp-formula" rid="M4">4</xref>), respectively, and the AP information. More data corresponding to different training set sizes are listed in <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btn186/DC1">Supplementary Table A1</ext-link>.</p></fn></table-wrap-foot></table-wrap></p><p>The coefficient from Equation (<xref ref-type="disp-formula" rid="M3">3</xref>) exhibits in general the best performance (<xref ref-type="table" rid="T2">Table 2</xref>), although the advantage is marginal. When using only MCS information, MCS c2 generates the best results in the NCI antiviral dataset, and close to the best results in the NCI anticancer dataset. When both the MCS and the AP information are used, the hybrid c2 model [Equation (<xref ref-type="disp-formula" rid="M3">3</xref>)] shows the best performance in both datasets.</p></sec><sec id="SEC4.3.7"><title>4.3.7 Varying the number of basis compounds</title><p>Another factor that might affect the performance of prediction models is the choice of the basis compounds. In principle, the set of basis compounds should be as diverse as possible and should cover the chemical space as thoroughly as possible. To evaluate the sensitivity of our models regarding the choice of basis compounds, we performed a series of tests on both compound datasets. We varied the number of basis compounds from 20 to 140 in increments of 20 compounds. The obtained AUC values are listed in <xref ref-type="table" rid="T3">Table 3</xref>.
<table-wrap id="T3" position="float"><label>Table 3.</label><caption><p>Average AUC values using the prediction models with different numbers of basis compounds</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="center" rowspan="1" colspan="1">Models</th><th colspan="7" align="center" rowspan="1">Number of basis compounds</th></tr><tr><th rowspan="1" colspan="1"/><th align="center" rowspan="1" colspan="1">20</th><th align="center" rowspan="1" colspan="1">40</th><th align="center" rowspan="1" colspan="1">60</th><th align="center" rowspan="1" colspan="1">80</th><th align="center" rowspan="1" colspan="1">100</th><th align="center" rowspan="1" colspan="1">120</th><th align="center" rowspan="1" colspan="1">140</th></tr></thead><tbody><tr><td colspan="8" align="left" rowspan="1">NCI antiviral dataset</td></tr><tr><td align="center" rowspan="1" colspan="1">AP</td><td align="center" rowspan="1" colspan="1">70.7</td><td align="center" rowspan="1" colspan="1">72.4</td><td align="center" rowspan="1" colspan="1">73.3</td><td align="center" rowspan="1" colspan="1">73.9</td><td align="center" rowspan="1" colspan="1">74.0</td><td align="center" rowspan="1" colspan="1">72.9</td><td align="center" rowspan="1" colspan="1">72.9</td></tr><tr><td align="center" rowspan="1" colspan="1">MCS c2</td><td align="center" rowspan="1" colspan="1">73.0</td><td align="center" rowspan="1" colspan="1">74.6</td><td align="center" rowspan="1" colspan="1">74.6</td><td align="center" rowspan="1" colspan="1">75.8</td><td align="center" rowspan="1" colspan="1">75.5</td><td align="center" rowspan="1" colspan="1">75.4</td><td align="center" rowspan="1" colspan="1">75.2</td></tr><tr><td align="center" rowspan="1" colspan="1">Hybrid c2</td><td align="center" rowspan="1" colspan="1">74.4</td><td align="center" rowspan="1" colspan="1">75.2</td><td align="center" rowspan="1" colspan="1">75.4</td><td align="center" rowspan="1" colspan="1">76.2</td><td align="center" rowspan="1" colspan="1">76.1</td><td align="center" rowspan="1" colspan="1">75.4</td><td align="center" rowspan="1" colspan="1">75.6</td></tr><tr><td colspan="8" align="left" rowspan="1">NCI anticancer dataset</td></tr><tr><td align="center" rowspan="1" colspan="1">AP</td><td align="center" rowspan="1" colspan="1">69.5</td><td align="center" rowspan="1" colspan="1">72.4</td><td align="center" rowspan="1" colspan="1">72.6</td><td align="center" rowspan="1" colspan="1">73.2</td><td align="center" rowspan="1" colspan="1">73.9</td><td align="center" rowspan="1" colspan="1">74.7</td><td align="center" rowspan="1" colspan="1">73.7</td></tr><tr><td align="center" rowspan="1" colspan="1">MCS c2</td><td align="center" rowspan="1" colspan="1">71.0</td><td align="center" rowspan="1" colspan="1">74.2</td><td align="center" rowspan="1" colspan="1">75.2</td><td align="center" rowspan="1" colspan="1">75.5</td><td align="center" rowspan="1" colspan="1">75.9</td><td align="center" rowspan="1" colspan="1">76.6</td><td align="center" rowspan="1" colspan="1">76.4</td></tr><tr><td align="center" rowspan="1" colspan="1">Hybrid c2</td><td align="center" rowspan="1" colspan="1">74.4</td><td align="center" rowspan="1" colspan="1">75.9</td><td align="center" rowspan="1" colspan="1">75.9</td><td align="center" rowspan="1" colspan="1">76.1</td><td align="center" rowspan="1" colspan="1">76.5</td><td align="center" rowspan="1" colspan="1">77.2</td><td align="center" rowspan="1" colspan="1">76.9</td></tr></tbody></table><table-wrap-foot><fn><p>For the NCI antiviral dataset, 25 000 randomly selected compounds were used as the training set. For the NCI anticancer dataset, 5000 randomly selected compounds were used as the training set.</p></fn></table-wrap-foot></table-wrap></p><p>The results in <xref ref-type="table" rid="T3">Table 3</xref> indicate that for all the listed models, the AUC values increase with the number of basis compounds. This trend peaks at around 80 to 120 basis compounds. After this, no significant improvement can be achieved. It is important to point out, that the peak performance of each method in <xref ref-type="table" rid="T3">Table 3</xref> should be used for comparisons between the three methods, and not their performance within the same number of basis compounds.</p></sec><sec id="SEC4.3.8"><title>4.3.8 Comparisons with other prediction approaches</title><p>We compared the performance of our prediction models to results reported by (Deshpande <italic>et al.</italic> (<xref ref-type="bibr" rid="B19">2005</xref>). In this study, the authors listed the prediction performance measured by the AUC values of several representative approaches. The authors applied five-way cross-validation to all models using several datasets, among which was the NCI antiviral dataset. To compare our proposed approach with these models, we used the <italic>ROC Curve for Binary SVM</italic> tool to calculate the AUC value of our proposed hybrid model by applying five-way cross-validation on the NCI antiviral dataset. The result for our hybrid model is listed in <xref ref-type="table" rid="T4">Table 4</xref> along with the data reported by Deshpande <italic>et al.</italic> (<xref ref-type="bibr" rid="B19">2005</xref>).
<table-wrap id="T4" position="float"><label>Table 4.</label><caption><p>AUC values for different prediction models applied to the NCI antiviral dataset</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="center" rowspan="1" colspan="1">Models</th><th align="center" rowspan="1" colspan="1">hybrid c2</th><th align="center" rowspan="1" colspan="1">physicochemical-based</th><th align="center" rowspan="1" colspan="1">descriptor-based</th><th align="center" rowspan="1" colspan="1">SUBDUE</th><th align="center" rowspan="1" colspan="1">SubdueCL</th><th align="center" rowspan="1" colspan="1">FSG</th></tr></thead><tbody><tr><td align="center" rowspan="1" colspan="1">AUC</td><td align="center" rowspan="1" colspan="1">82.3</td><td align="center" rowspan="1" colspan="1">47.3</td><td align="center" rowspan="1" colspan="1">72.1</td><td align="center" rowspan="1" colspan="1">58.5</td><td align="center" rowspan="1" colspan="1">65.2</td><td align="center" rowspan="1" colspan="1">79.4</td></tr></tbody></table><table-wrap-foot><fn><p>Hybrid c2 is our proposed hybrid model using the coefficient from Equation (<xref ref-type="disp-formula" rid="M3">3</xref>) and 80 randomly selected compounds as basis compounds. Radial kernel function-based classifier was used, with <italic>C</italic> set to 64 and &#x003b3; set to 0.0625. The physicochemical-based method is described in Deshpande <italic>et al.</italic> (<xref ref-type="bibr" rid="B19">2005</xref>). The descriptor-based method combines 166 MACCS keys from the MDL and Daylight fingerprints. SUBDUE (Holder <italic>et al.</italic>, <xref ref-type="bibr" rid="B28">1994</xref>) and SubdueCL (Gonzalez <italic>et al.</italic>, <xref ref-type="bibr" rid="B26">2001</xref>) are methods based on heuristic substructure discovery. FSG is the method proposed by (Deshpande <italic>et al.</italic> (<xref ref-type="bibr" rid="B19">2005</xref>) using topological subgraphs but not geometrical subgraphs.</p></fn></table-wrap-foot></table-wrap></p><p>According to these comparisons, our method outperforms all the methods listed in <xref ref-type="table" rid="T4">Table 4</xref>. In addition to its improved performance, our method uses a feature space with a much lower dimensionality. Therefore, it is computationally less complex to train the SVM model and make predictions. For example, to achieve the performance exhibited in the table, the Frequent SubGraph (FSG) model used 18 542 features to represent a compound. The authors had to apply feature selection to reduce this number to 2460. However, this feature selection step also reduced the prediction quality and cut the AUC value to 78.5. In comparison, our method used only 160 features to achieve the better performance without requiring any feature selection step. Furthermore, it is easy to incorporate other similarity measures into our hybrid model to further advance its performance. For example, one can easily incorporate the similarity measure used in FSG into our hybrid model.</p></sec></sec></sec><sec sec-type="conclusions" id="SEC5"><title>5 CONCLUSION AND FUTURE WORK</title><p>This article describes the development of a novel MCS algorithm and the concept of basis compounds for measuring the similarity between chemical structures. Both methods are applied to similarity searching of chemical databases and are incorporated into SVM models to efficiently predict biologically active compounds.</p><p>More specifically, a new backtracking algorithm for finding the MCS between a pair of graphs is designed and its performance is tested. This algorithm can be applied to chemical structure graphs directly (instead of association graphs), and hence supports several matching contraints as well as relaxations that can be useful when applied to comparison of chemical compounds. Several strategies are introduced to increase the efficiency and flexibility of the algorithm. This algorithm can be effectively used with a progressive optimization strategy, which is very beneficial for ranking a large number of chemical structures by their similarities to query structures.</p><p>In order to combine the MCS-based similarity measure and other similarity measures with modern machine learning techniques to form effective bioactivity prediction models, the concept of basis compounds is proposed. This concept allows for a vector representation of chemical structures, similar to traditional fingerprint approaches, while avoiding many drawbacks of the traditional fingerprint approaches. Finally, the derived vectors are incorporated into SVMs to build prediction models of biological activities of compounds.</p><p>Our experimental results show that the MCS-based similarity measure is more effective in searching chemical databases than the well-known AP-based method. They also show that the SVM models based on vectors derived from basis compounds are effective for identifying bioactive compounds. Moreover, the MCS-based similarity measure complements the AP-based measure effectively. Our proposed hybrid model, which combines the MCS and the AP similarity measures, provides the most effective predictions in comparison with the existing approaches.</p><p>In the future we will work on several improvements of our approach. First, chemical structures have certain properties that can be used to achieve more effective heuristics in computing the MCS. Second, the MCS-based similarity can be easily adapted to cluster chemical structures. Another interesting application is the identification of the MCS among more than two structures. Finally, it will be interesting to combine the MCS-based similarity measure and the hybrid vectorization method with similarity measures based on physicochemical property descriptors.</p></sec>
      <sec sec-type="supplementary-material">
         <title>Supplementary Material</title>
         <supplementary-material id="PMC_1" content-type="local-data">
            <caption>
               <title>[Supplementary Data]</title>
            </caption>
            <media mimetype="text" mime-subtype="html" xlink:href="btn186_index.html"/>
            <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf"
                   xlink:href="btn186_1.pdf"/>
         </supplementary-material>
      </sec>
   </body><back><ack><title>ACKNOWLEDGEMENTS</title><p>We acknowledge the support from the Bioinformatics Core Facility, the Center for Plant Cell Biology (CEPCEB) and the Institute for Integrative Genome Biology (IIGB) at UC Riverside.</p><p><italic>Funding</italic>: This work was supported by grants from the National Science Foundation (IOB-0420033, IOB-0420152, IGERT-0504249 and IIS-0711129).</p><p><italic>Conflict of Interest</italic>: none declared.</p></ack><ref-list><title>REFERENCES</title><ref id="B1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Abt</surname><given-names>M</given-names></name><etal/></person-group><article-title>Sequential approach for identifying lead compounds in large chemical databases</article-title><source>Statist. Sci</source><year>2001</year><volume>16</volume><fpage>154</fpage><lpage>168</lpage></element-citation></ref><ref id="B2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Altman</surname><given-names>D</given-names></name><name><surname>Bland</surname><given-names>J</given-names></name></person-group><article-title>Diagnostic tests 2: predictive values</article-title><source>Br. Med. J</source><year>1994</year><volume>309</volume><fpage>102</fpage><pub-id pub-id-type="pmid">8038641</pub-id></element-citation></ref><ref id="B3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Barrow</surname><given-names>H</given-names></name><name><surname>Burstall</surname><given-names>R</given-names></name></person-group><article-title>Subgraph isomorphism, matching relational structures and maximal cliques</article-title><source>Inf. Process. Lett</source><year>1976</year><volume>4</volume><fpage>83</fpage><lpage>84</lpage></element-citation></ref><ref id="B4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Berretti</surname><given-names>S</given-names></name><etal/></person-group><article-title>Efficient matching and indexing of graph models in content-based retrieval</article-title><source>IEEE Trans. Pattern Anal. Mach. Intell</source><year>2001</year><volume>23</volume><fpage>1089</fpage><lpage>1105</lpage></element-citation></ref><ref id="B5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Blower</surname><given-names>P</given-names></name><etal/></person-group><article-title>Comparison of methods for sequential screening of large compound sets</article-title><source>Comb. Chem. High Throughput Screen</source><year>2006</year><volume>9</volume><fpage>115</fpage><lpage>122</lpage><pub-id pub-id-type="pmid">16475969</pub-id></element-citation></ref><ref id="B6"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Bunke</surname><given-names>H</given-names></name></person-group><article-title>Graph matching: theoretical foundations, algorithms and applications</article-title><year>2000</year><conf-name>Proceedings of the International Conference on Vision Interface</conf-name><conf-loc>Montreal, Quebec, Canada</conf-loc><fpage>82</fpage><lpage>88</lpage></element-citation></ref><ref id="B7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bunke</surname><given-names>H</given-names></name><name><surname>Shearer</surname><given-names>K</given-names></name></person-group><article-title>A graph distance metric based on the maximal common subgraph</article-title><source>Pattern Recognit. Lett</source><year>1998</year><volume>19</volume><fpage>255</fpage><lpage>259</lpage></element-citation></ref><ref id="B8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Burden</surname><given-names>F</given-names></name></person-group><article-title>Using artificial neural networks to predict biological activity from simple molecular structural considerations</article-title><source>Quant. Struct.-Act. Rel</source><year>1996</year><volume>15</volume><fpage>11</fpage></element-citation></ref><ref id="B9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Carhart</surname><given-names>R</given-names></name><etal/></person-group><article-title>Atom pairs as molecular features in structure-activity studies: definition and applications</article-title><source>J. Chem. Inf. Comput. Sci</source><year>1985</year><volume>25</volume><fpage>64</fpage><lpage>73</lpage></element-citation></ref><ref id="B10"><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Chang</surname><given-names>C</given-names></name><name><surname>Lin</surname><given-names>C</given-names></name></person-group><article-title>LIBSVM: a library for support vector machines</article-title><year>2001</year><comment>Software available at <ext-link ext-link-type="uri" xlink:href="http://www.csie.ntu.edu.tw/cjlin/libsvm">http://www.csie.ntu.edu.tw/cjlin/libsvm</ext-link></comment></element-citation></ref><ref id="B11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>X</given-names></name><name><surname>Reynolds</surname><given-names>C</given-names></name></person-group><article-title>Performance of similarity measures in 2D fragment-based similarity searching: comparison of structural descriptors and similarity coefficients</article-title><source>J. Chem. Inf. Comput. Sci</source><year>2002</year><volume>42</volume><fpage>1407</fpage><lpage>1414</lpage><pub-id pub-id-type="pmid">12444738</pub-id></element-citation></ref><ref id="B12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cheng</surname><given-names>AC</given-names></name><etal/></person-group><article-title>Structure-based maximal affinity model predicts small-molecule druggability</article-title><source>Nat. Biotechnol</source><year>2007</year><volume>25</volume><fpage>71</fpage><lpage>75</lpage><pub-id pub-id-type="pmid">17211405</pub-id></element-citation></ref><ref id="B13"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Christianini</surname><given-names>N</given-names></name><name><surname>Shawe-Taylor</surname><given-names>J</given-names></name></person-group><source>An Introduction to Support Vector Machines and Other Kernel-based Learning Methods</source><year>2000</year><publisher-loc>New York</publisher-loc><publisher-name>Cambridge University Press</publisher-name></element-citation></ref><ref id="B14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cone</surname><given-names>M</given-names></name><etal/></person-group><article-title>Molecular structure comparison program for the identification of maximal common substructures</article-title><source>J. Am. Chem. Soc</source><year>1977</year><volume>99</volume><fpage>7668</fpage><lpage>7671</lpage></element-citation></ref><ref id="B15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Conte</surname><given-names>D</given-names></name><etal/></person-group><article-title>Thirty years of graph matching in pattern recognition</article-title><source>Inter. J. Pattern Recognit. Artif. Intell</source><year>2004</year><volume>18</volume><fpage>265</fpage><lpage>298</lpage></element-citation></ref><ref id="B16"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Cordella</surname><given-names>L</given-names></name><etal/></person-group><article-title>Graph matching: a fast algorithm and its evaluation</article-title><source>Proceedings of the 14th International Conference Pattern Recognition</source><year>1998</year><volume>Vol. 2</volume><publisher-loc>Brisbane, Australia</publisher-loc><fpage>1582</fpage><lpage>1584</lpage></element-citation></ref><ref id="B17"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Cordella</surname><given-names>L</given-names></name><etal/></person-group><article-title>An improved algorithm for matching large graphs</article-title><source>Proceedings of the 3rd IAPR TC-15 Workshop on Graphbased Representations in Pattern Recognition</source><year>2001</year><fpage>149</fpage><lpage>159</lpage></element-citation></ref><ref id="B18"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Dean</surname><given-names>P</given-names></name></person-group><source>Molecular Similarity in Drug Design</source><year>1995</year><publisher-loc>London</publisher-loc><publisher-name>Blackie Academic &#x00026; Professional</publisher-name></element-citation></ref><ref id="B19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Deshpande</surname><given-names>M</given-names></name><etal/></person-group><article-title>Frequent Sub-structure-based approaches for classifying chemical compounds</article-title><source>IEEE Trans. Knowled. Data Eng</source><year>2005</year><volume>17</volume><fpage>1036</fpage><lpage>1050</lpage></element-citation></ref><ref id="B20"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Dimitriadou</surname><given-names>E</given-names></name><etal/></person-group><article-title>e1071: misc functions of the department of Statistics (e1071)</article-title><year>2005</year><publisher-loc>Wien</publisher-loc><publisher-name>TU Wien</publisher-name></element-citation></ref><ref id="B21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dobson</surname><given-names>CM</given-names></name></person-group><article-title>Chemical space and biology</article-title><source>Nature</source><year>2004</year><volume>432</volume><fpage>824</fpage><lpage>828</lpage><pub-id pub-id-type="pmid">15602547</pub-id></element-citation></ref><ref id="B22"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Dumay</surname><given-names>A</given-names></name><etal/></person-group><article-title>Consistent inexact graph matching applied to labelling coronarysegments in arteriograms. Pattern Recognition</article-title><source>Proceedings of the 11th Image, Speech and Signal Analysis (IAPR) International Conference on Patten Recognition</source><year>1992</year><volume>Vol.III</volume><publisher-loc>Netherlands</publisher-loc><publisher-name>The Hague</publisher-name><fpage>439</fpage><lpage>442</lpage></element-citation></ref><ref id="B23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Engels</surname><given-names>M</given-names></name><name><surname>Venkatarangan</surname><given-names>P</given-names></name></person-group><article-title>Smart screening: approaches to efficient HTS</article-title><source>Curr. Opin. Drug Discov. Devel</source><year>2001</year><volume>4</volume><fpage>275</fpage><lpage>283</lpage></element-citation></ref><ref id="B24"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Garey</surname><given-names>M</given-names></name><name><surname>Johnson</surname><given-names>D</given-names></name></person-group><source>Computers and Intractability: a Guide to the Theory of NP-Completeness</source><year>1979</year><publisher-loc>New York, NY, USA</publisher-loc><publisher-name>WH Freeman &#x00026; Co</publisher-name></element-citation></ref><ref id="B25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Girke</surname><given-names>T</given-names></name><etal/></person-group><article-title>ChemMine. A compound mining database for chemical genomics</article-title><source>Plant Physiol</source><year>2005</year><volume>138</volume><fpage>573</fpage><lpage>577</lpage><pub-id pub-id-type="pmid">15955920</pub-id></element-citation></ref><ref id="B26"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Gonzalez</surname><given-names>J</given-names></name><etal/></person-group><article-title>Application of graph-based concept learning to the predictive toxicology domain</article-title><source>Proceedings of the Predictive Toxicology Challenge Workshop</source><year>2001</year><publisher-loc>Freiburg, Germany</publisher-loc></element-citation></ref><ref id="B27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hagadone</surname><given-names>T</given-names></name></person-group><article-title>Molecular substructure similarity searching:efficient retrieval in two-dimensional structure databases</article-title><source>J. Chem. Inf. Comput. Sci</source><year>1992</year><volume>32</volume><fpage>515</fpage><lpage>521</lpage></element-citation></ref><ref id="B28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Holder</surname><given-names>L</given-names></name><etal/></person-group><article-title>Substructure discovery in the subdue system</article-title><source>Proc. AAAI</source><year>1994</year><volume>94</volume><fpage>169</fpage><lpage>180</lpage></element-citation></ref><ref id="B29"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>James</surname><given-names>C</given-names></name><etal/></person-group><source>Daylight Theory Manual</source><year>1995</year><publisher-loc>Aliso Viejo, California, USA</publisher-loc><publisher-name>Daylight Chemical Information Systems Inc</publisher-name></element-citation></ref><ref id="B30"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Johnson</surname><given-names>M</given-names></name><name><surname>Maggiora</surname><given-names>G</given-names></name></person-group><source>Concepts and Applications of Molecular Similarity</source><year>1990</year><publisher-loc>New York</publisher-loc><publisher-name>Wiley</publisher-name></element-citation></ref><ref id="B31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>King</surname><given-names>R</given-names></name><name><surname>Srinivasan</surname><given-names>A</given-names></name></person-group><article-title>The discovery of indicator variables for QSAR using inductive logic programming</article-title><source>J. Comput. Aided Mol. Des</source><year>1997</year><volume>11</volume><fpage>571</fpage><lpage>580</lpage><pub-id pub-id-type="pmid">9491349</pub-id></element-citation></ref><ref id="B32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Koch</surname><given-names>I</given-names></name></person-group><article-title>Enumerating all connected maximal common subgraphs in two graphs</article-title><source>Theor. Comput. Sci</source><year>2001</year><volume>250</volume><fpage>1</fpage><lpage>30</lpage></element-citation></ref><ref id="B33"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Levi</surname><given-names>G</given-names></name></person-group><article-title>A note on the derivation of maximal common subgraphs of two directed or undirected graphs</article-title><source>Calcolo</source><year>1973</year><volume>9</volume><fpage>341</fpage><lpage>352</lpage></element-citation></ref><ref id="B34"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Luo</surname><given-names>B</given-names></name><name><surname>Hancock</surname><given-names>E</given-names></name></person-group><article-title>Structural graph matching using the EM algorithm and singular value decomposition</article-title><source>IEEE Trans. Pattern Anal. Mach. Intell</source><year>2001</year><volume>23</volume><fpage>1120</fpage><lpage>1136</lpage></element-citation></ref><ref id="B35"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McGregor</surname><given-names>J</given-names></name></person-group><article-title>Backtrack search algorithms and the maximal common subgraph problem</article-title><source>Software-Pract. Exper</source><year>1982</year><volume>12</volume><fpage>23</fpage><lpage>34</lpage></element-citation></ref><ref id="B36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Moriguchi</surname><given-names>I</given-names></name><etal/></person-group><article-title>Fuzzy adaptive least squares and its application to structure-activity studies</article-title><source>Quant. struct. activ. relation</source><year>1992</year><volume>11</volume><fpage>325</fpage><lpage>331</lpage></element-citation></ref><ref id="B37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Provost</surname><given-names>F</given-names></name><name><surname>Fawcett</surname><given-names>T</given-names></name></person-group><article-title>Robust classification for imprecise environments</article-title><source>Mach. Learn</source><year>2001</year><volume>42</volume><fpage>203</fpage><lpage>231</lpage></element-citation></ref><ref id="B38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Raymond</surname><given-names>J</given-names></name><etal/></person-group><article-title>Heuristics for similarity searching of chemical graphs using a maximum common edge subgraph algorithm</article-title><source>J. Chem. Inf. Comput. Sci</source><year>2002a</year><volume>42</volume><fpage>305</fpage><lpage>316</lpage><pub-id pub-id-type="pmid">11911700</pub-id></element-citation></ref><ref id="B39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Raymond</surname><given-names>J</given-names></name><etal/></person-group><article-title>RASCAL:calculation of graph similarity using maximum common edge subgraphs</article-title><source>Comput. J</source><year>2002b</year><volume>45</volume><fpage>631</fpage></element-citation></ref><ref id="B40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sheridan</surname><given-names>RP</given-names></name><name><surname>Kearsley</surname><given-names>SK</given-names></name></person-group><article-title>Why do we need so many chemical similarity search methods?</article-title><source>Drug Discov. Today</source><year>2002</year><volume>7</volume><fpage>903</fpage><lpage>911</lpage><pub-id pub-id-type="pmid">12546933</pub-id></element-citation></ref><ref id="B41"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tsai</surname><given-names>W</given-names></name><name><surname>Fu</surname><given-names>K</given-names></name></person-group><article-title>Error-correcting isomorphisms of attributed relational graphs for pattern analysis</article-title><source>IEEE Trans. Syst. Man Cybern</source><year>1979</year><volume>9</volume><fpage>757</fpage><lpage>768</lpage></element-citation></ref><ref id="B42"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>Y</given-names></name><etal/></person-group><article-title>Genetic-based search for error-correcting graph isomorphism</article-title><source>IEEE Trans. Syst. Man Cybern. Part B</source><year>1997</year><volume>27</volume><fpage>588</fpage><lpage>597</lpage></element-citation></ref><ref id="B43"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wheeler</surname><given-names>D</given-names></name><etal/></person-group><article-title>Database resources of the national center for biotechnology information</article-title><source>Nucleic Acids Res</source><year>2007</year><volume>35</volume><issue>(Database issue)</issue><fpage>D5</fpage><pub-id pub-id-type="pmid">17170002</pub-id></element-citation></ref><ref id="B44"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Willett</surname><given-names>P</given-names></name><etal/></person-group><article-title>Chemical similarity searching</article-title><source>J. Chem. Inf. Comput. Sci</source><year>1998</year><volume>38</volume><fpage>983</fpage><lpage>996</lpage></element-citation></ref><ref id="B45"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wilson</surname><given-names>R</given-names></name><name><surname>Hancock</surname><given-names>E</given-names></name></person-group><article-title>Structural matching by discrete relaxation</article-title><source>IEEE Trans. Pattern Anal. Mach. Intell</source><year>1997</year><volume>19</volume><fpage>634</fpage><lpage>648</lpage></element-citation></ref><ref id="B46"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Yan</surname><given-names>X</given-names></name><etal/></person-group><article-title>Substructure similarity search in graph databases</article-title><source>SIGMOD'05: Proceedings of the 2005 ACM SIGMOD International Conference on Management of Data</source><year>2005</year><publisher-loc>New York, NY, USA</publisher-loc><publisher-name>ACM Press</publisher-name><fpage>766</fpage><lpage>777</lpage></element-citation></ref></ref-list></back></article>